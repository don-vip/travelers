imprison_character_effect = {
	$TARGET$ = { save_scope_as = imprisonment_target }
	$IMPRISONER$ = { save_scope_as = imprisoner }

	scope:imprisonment_target = {
		if = {
			limit = {
				has_opinion_modifier = {
					modifier = imprisoned_me_past
					target = scope:imprisoner
				}
			}
			hidden_effect = {
				remove_opinion = {
					target = scope:imprisoner
					modifier = imprisoned_me
				}
			}
		}
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:imprisonment_target }

	if = {
		limit = {
			scope:imprisonment_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}

		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:imprisonment_target
				TYPE = house_arrest
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								modifier = imprisoned_family_member
								target = scope:imprisoner
							}
						}
					}
				}
			}
		}
	}

	else = {
		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:imprisonment_target
				TYPE = dungeon
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								modifier = imprisoned_family_member_dungeon
								target = scope:imprisoner
							}
						}
					}
				}
			}
		}
	}

	scope:imprisoner = {
		imprison_tyranny_effect = yes
	}

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:imprisonment_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:imprisonment_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:imprisonment_target
				NOT = { has_relation_rival = scope:imprisonment_target } #To enable really strange love stories
			}
			scope:imprisonment_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}

	#Remove them as guardian/ward for any courtiers and give feedback about this
	imprison_remove_ward_guardian_effect = { IMPRISONER = scope:imprisoner PRISONER = scope:imprisonment_target }

}

imprison_character_effect_ignore_reason = {
	$TARGET$ = { save_temporary_scope_as = imprisonment_target }
	$IMPRISONER$ = { save_temporary_scope_as = imprisoner }


	if = {
		limit = {
			scope:imprisonment_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}

		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:imprisonment_target
				TYPE = house_arrest
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
				}
			}
		}
	}

	else = {
		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:imprisonment_target
				TYPE = dungeon
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
				}
			}
		}
	}

	scope:imprisoner = {
		add_tyranny = imprisonment_tyranny_gain
	}

	scope:imprisonment_target = {
		if = {
			limit = {
				has_opinion_modifier = {
					modifier = imprisoned_me_past
					target = scope:imprisoner
				}
			}
			hidden_effect = {
				remove_opinion = {
					target = scope:imprisoner
					modifier = imprisoned_me
				}
			}
		}
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:imprisonment_target }

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:imprisonment_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:imprisonment_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:imprisonment_target
				NOT = { has_relation_rival = scope:imprisonment_target } #To enable really strange love stories
			}
			scope:imprisonment_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}

	#Remove them as guardian/ward for any courtiers and give feedback about this
	imprison_remove_ward_guardian_effect = { IMPRISONER = scope:imprisoner PRISONER = scope:imprisonment_target }
}

imprison_hostage_tooltip_effect = {
	$WHO$ = {
		if = {
			limit = { is_hostage = yes }
			custom_tooltip = hostage_prison_invalidation_tt
		}
	}
}


hard_imprison_character_effect = {
	$TARGET$ = { save_temporary_scope_as = new_target }
	$IMPRISONER$ = { save_temporary_scope_as = new_imprisoner }



	scope:new_imprisoner = {
		travl_imprison_effect = { # Travelers: Save current location
			TARGET = scope:new_target
			TYPE = house_arrest
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:new_target }

	hidden_effect = {
		#Disband any scheme you have against them
		scope:new_imprisoner = {
			if = {
				limit = {
					any_scheme = {
						scheme_target = scope:new_target
					}
				}
				every_scheme = {
					limit = {
						scheme_target = scope:new_target
					}
					end_scheme = yes
				}
			}
		}

		#Send break up event if they are your lover
		scope:new_imprisoner = {
			if = {
				limit = {
					has_relation_lover = scope:new_target
					NOT = { has_relation_rival = scope:new_target } #To enable really strange love stories
				}
				scope:new_target = {
					trigger_event = {
						id = lover.0101
						days = { 14 30 }
					}
				}
			}
		}

		#Remove them as guardian/ward for any courtiers and give feedback about this
		imprison_remove_ward_guardian_effect = { IMPRISONER = scope:new_imprisoner  PRISONER = scope:new_target }
	}
}

#Exactly the same as imprison_character_effect, except it never adds tyranny
#USE THIS SPARINGLY. READ ME: It is usually better to set an opinion with an imprisonment reason for "custom situations". For cases where there is a "standard imprisonment reason", such as for murder, but that imprisonment reason set before this script has to be executed, double-check that the imprisonment you're doing is actually rightful.
rightfully_imprison_character_effect = {
	$TARGET$ = { save_scope_as = new_target }
	$IMPRISONER$ = { save_scope_as = imprisoner }


	if = {
		limit = {
			scope:new_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}

		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = house_arrest
			}
			scope:new_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								target = scope:imprisoner
								modifier = imprisoned_family_member
								opinion = -15
							}
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
				}
			}
		}
	}

	else = {
		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = dungeon
			}
			scope:new_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								target = scope:imprisoner
								modifier = imprisoned_family_member
								opinion = -15
							}
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
				}
			}
		}
	}

	scope:imprisoner = {
		if = {
			limit = { exists = scope:disable_display_rightful_imprisonment_tooltip }
			# No tooltip if we do this.
		}
		else_if = {
			limit = {
				exists = scope:recipient
				has_imprisonment_reason = scope:new_target
			}
			custom_tooltip = IS_ALLOWED_TO_IMPRISON_DESC
		}
		else = { custom_tooltip = IS_ALLOWED_TO_IMPRISON_NO_RECIPIENT_DESC }
	}

	scope:new_target = {
		if = {
			limit = {
				has_opinion_modifier = {
					modifier = imprisoned_me_past
					target = scope:imprisoner
				}
			}
			hidden_effect = {
				remove_opinion = {
					target = scope:imprisoner
					modifier = imprisoned_me
				}
			}
		}
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:new_target }

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:new_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:new_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:new_target
				NOT = { has_relation_rival = scope:new_target } #To enable really strange love stories
			}
			scope:new_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}

	#Remove them as guardian/ward for any courtiers and give feedback about this
	imprison_remove_ward_guardian_effect = { IMPRISONER = scope:imprisoner PRISONER = scope:new_target }
}

rightfully_imprison_character_less_verbose_effect = {
	$TARGET$ = { save_scope_as = new_target }
	$IMPRISONER$ = { save_scope_as = imprisoner }


	if = {
		limit = {
			scope:new_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}

		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = house_arrest
			}
			hidden_effect = {
				scope:new_target = {
					if = {
						limit = {
							any_close_or_extended_family_member = {
								NOT = { scope:imprisoner = this }
							}
						}
						hidden_effect = {
							every_close_or_extended_family_member = {
								limit = {
									NOT = { scope:imprisoner = this }
								}
								add_opinion = {
									target = scope:imprisoner
									modifier = imprisoned_family_member
									opinion = -15
								}
							}
						}
						custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
					}
				}
			}
		}
	}

	else = {
		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = dungeon
			}
			hidden_effect = {
				scope:new_target = {
					if = {
						limit = {
							any_close_or_extended_family_member = {
								NOT = { scope:imprisoner = this }
							}
						}
						hidden_effect = {
							every_close_or_extended_family_member = {
								limit = {
									NOT = { scope:imprisoner = this }
								}
								add_opinion = {
									target = scope:imprisoner
									modifier = imprisoned_family_member
									opinion = -15
								}
							}
						}
						custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
					}
				}
			}
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:new_target }

	hidden_effect = {
		scope:imprisoner = {
			if = {
				limit = { exists = scope:disable_display_rightful_imprisonment_tooltip }
				# No tooltip if we do this.
			}
			else_if = {
				limit = {
					exists = scope:recipient
					has_imprisonment_reason = scope:new_target
				}
				custom_tooltip = IS_ALLOWED_TO_IMPRISON_DESC
			}
			else = { custom_tooltip = IS_ALLOWED_TO_IMPRISON_NO_RECIPIENT_DESC }
		}

		scope:new_target = {
			add_opinion = {
				target = scope:imprisoner
				modifier = imprisoned_me
			}
		}

		#Disband any scheme you have against them
		scope:imprisoner = {
			if = {
				limit = {
					any_scheme = {
						scheme_target = scope:new_target
					}
				}
				every_scheme = {
					limit = {
						scheme_target = scope:new_target
					}
					end_scheme = yes
				}
			}
		}

		#Send break up event if they are your lover
		scope:imprisoner = {
			if = {
				limit = {
					has_relation_lover = scope:new_target
					NOT = { has_relation_rival = scope:new_target } #To enable really strange love stories
				}
				scope:new_target = {
					trigger_event = {
						id = lover.0101
						days = { 14 30 }
					}
				}
			}
		}

		#Remove them as guardian/ward for any courtiers and give feedback about this
		imprison_remove_ward_guardian_effect = { IMPRISONER = scope:imprisoner PRISONER = scope:new_target }
	}

}

# A lite version of imprison_character_effect without opinion penalties or other consequences (as they were captured in war, not at your command)
prisoner_of_war_capture_effect = {
	$TARGET$ = { save_temporary_scope_as = new_target }
	$IMPRISONER$ = { save_temporary_scope_as = imprisoner }

	if = {
		limit = {
			scope:new_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}

		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = house_arrest
			}
		}
	}
	else = {
		scope:imprisoner = {
			travl_imprison_effect = { # Travelers: Save current location
				TARGET = scope:new_target
				TYPE = dungeon
			}
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:new_target }
}
