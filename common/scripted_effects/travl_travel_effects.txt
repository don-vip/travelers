travl_travel_to_court_effect = {
	if = {
		limit = {
			exists = $RECEIVER$
			NOR = {
				current_travel_plan ?= {
					travel_plan_owner = $RECEIVER$
				}
				is_in_army = yes
				has_variable = travl_invited_character
			}
		}

		if = {
			limit = {
				NOT = { location = $RECEIVER$.capital_province }
			}

			# Travel from current location to receiver's capital province
			travl_travel_effect = {
				SENDER = $SENDER$
				RECEIVER = $RECEIVER$
				ORIGIN = location
				COMPANIONS = none
				EVENT = $EVENT$
			}
		}
		else = {
			# Abort any ongoing travel
			travl_abort_travel_effect = yes
		}
	}
}

travl_travel_to_location_effect = {
	save_scope_as = traveler

	if = {
		limit = {
			has_variable = travl_location
			NOT = { var:travl_location = location }
		}

		# Determine receiver from the current location
		random_living_character = {
			limit = {
				is_landed = yes
				capital_province = scope:traveler.location
			}
			save_scope_as = receiver
		}

		if = {
			limit = { exists = scope:receiver }

			# Travel from saved location to receiver's capital province
			travl_travel_effect = {
				SENDER = scope:traveler
				RECEIVER = scope:receiver
				ORIGIN = var:travl_location
				COMPANIONS = none
				EVENT = $EVENT$
			}
		}
	}
}

travl_restore_location_effect = {
	if = {
		limit = {
			has_variable = travl_location
			NOT = { var:travl_location = location }
		}
		set_location = var:travl_location
	}
}

travl_travel_effect = {
	if = {
		limit = {
			exists = $ORIGIN$
			exists = $RECEIVER$.capital_province
			NOR = {
				$ORIGIN$ = $RECEIVER$.capital_province
				current_travel_plan ?= {
					final_destination_province = $RECEIVER$.capital_province
				}
			}
		}

		# Set leader travel variables
		travl_travel_set_variables_effect = {
			SENDER = $SENDER$
			RECEIVER = $RECEIVER$
			LEADER = this
			COMPANIONS = $COMPANIONS$
			EVENT = $EVENT$
		}

		# Start leader travel plan
		current_travel_plan ?= {
			abort_travel_plan = yes
		}
		set_location = $ORIGIN$
		start_travel_plan = {
			destination = $RECEIVER$.capital_province
			return_trip = no
			on_start_on_action = travl_travel_on_departure
			on_arrival_on_action = travl_travel_on_arrival
			on_arrival_destinations = last
		}

		every_in_list = {
			list = $COMPANIONS$

			# Set companion travel variables
			travl_travel_set_variables_effect = {
				SENDER = $SENDER$
				RECEIVER = $RECEIVER$
				LEADER = prev
				COMPANIONS = $COMPANIONS$
				EVENT = $EVENT$
			}

			# Start companion travel plan
			current_travel_plan ?= {
				abort_travel_plan = yes
			}
			set_location = $ORIGIN$
			start_travel_plan = {
				destination = $RECEIVER$.capital_province
				return_trip = no
				on_start_on_action = travl_travel_on_departure
				on_arrival_on_action = travl_travel_on_arrival
				on_arrival_destinations = last
			}
		}
	}
}

travl_abort_travel_effect = {
	if = {
		limit = { exists = current_travel_plan }

		# Save current location
		location = { save_scope_as = current_location }

		# Abort travel plan
		current_travel_plan ?= {
			abort_travel_plan = yes
		}
		set_location = scope:current_location

		travl_debug_log_effect = { MSG = travl_debug_msg_travel_aborted }

		# Remove travel variables
		travl_travel_remove_variables_effect = yes
	}
}

travl_travel_set_variables_effect = {
	set_variable = {
		name = travl_travel_sender
		value = $SENDER$
		years = 2
	}
	set_variable = {
		name = travl_travel_receiver
		value = $RECEIVER$
		years = 2
	}
	set_variable = {
		name = travl_travel_leader
		value = $LEADER$
		years = 2
	}
	save_temporary_scope_as = character
	clear_variable_list = travl_travel_companions
	every_in_list = {
		list = $COMPANIONS$
		scope:character = {
			add_to_variable_list = {
				name = travl_travel_companions
				target = prev
			}
		}
	}
	set_variable = {
		name = travl_travel_event
		value = $EVENT$
		years = 2
	}
}

travl_travel_remove_variables_effect = {
	if = {
		limit = { has_variable = travl_travel_sender }
		remove_variable = travl_travel_sender
	}
	if = {
		limit = { has_variable = travl_travel_receiver }
		remove_variable = travl_travel_receiver
	}
	if = {
		limit = { has_variable = travl_travel_leader }
		remove_variable = travl_travel_leader
	}
	if = {
		limit = { has_variable_list = travl_travel_companions }
		clear_variable_list = travl_travel_companions
	}
	if = {
		limit = { has_variable = travl_travel_event }
		remove_variable = travl_travel_event
	}
}

travl_travel_get_companions_effect = {
	if = {
		limit = { has_variable_list = travl_travel_companions }
		every_in_list = {
			variable = travl_travel_companions
			limit = { is_alive = yes }
			add_to_list = $COMPANIONS$
		}
	}
}

travl_travel_send_messages_effect = {
	save_temporary_scope_as = character

	if = {
		limit = {
			exists = $SENDER$
			travl_travel_should_send_message_trigger = { CHARACTER = $SENDER$ }
		}
		$SENDER$ = {
			send_interface_message = {
				type = event_generic_neutral
				title = $TITLE$
				right_icon = scope:character

				scope:character = {
					custom_description = {
						text = $TEXT$
						subject = this
						object = $RECEIVER$
					}
				}
				every_in_list = {
					list = $COMPANIONS$
					custom_description = {
						text = $TEXT$
						subject = this
						object = $RECEIVER$
					}
				}
			}
		}
	}
	if = {
		limit = {
			exists = $RECEIVER$
			NOT = { $RECEIVER$ = $SENDER$ }
			travl_travel_should_send_message_trigger = { CHARACTER = $RECEIVER$ }
		}
		$RECEIVER$ = {
			send_interface_message = {
				type = event_generic_neutral
				title = $TITLE$
				right_icon = scope:character

				scope:character = {
					custom_description = {
						text = $TEXT$
						subject = this
						object = $RECEIVER$
					}
				}
				every_in_list = {
					list = $COMPANIONS$
					custom_description = {
						text = $TEXT$
						subject = this
						object = $RECEIVER$
					}
				}
			}
		}
	}
}

travl_set_receiver_effect = {
	if = {
		limit = {
			imprisoner ?= { travl_travel_is_valid_receiver_trigger = yes }
		}
		imprisoner = { save_scope_as = receiver }
	}
	else_if = {
		limit = {
			travl_travel_is_valid_receiver_trigger = yes
		}
		save_scope_as = receiver
	}
	else_if = {
		limit = {
			warden ?= { travl_travel_is_valid_receiver_trigger = yes }
		}
		warden = { save_scope_as = receiver }
	}
	else_if = {
		limit = {
			host ?= { travl_travel_is_valid_receiver_trigger = yes }
		}
		host = { save_scope_as = receiver }
	}
	else_if = {
		limit = {
			liege ?= { travl_travel_is_valid_receiver_trigger = yes }
		}
		liege = { save_scope_as = receiver }
	}
}

