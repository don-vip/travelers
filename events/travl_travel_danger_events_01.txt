namespace = travl_travel_danger

scripted_effect travl_travel_danger_0001_outcome_effect = {
	# Setup character effects
	travl_travel_danger_0001_$OUTCOME$_effect = yes

	# Send messages to potential recipients and apply character effects
	travl_event_apply_outcome_effect = {
		EVENT = travel_danger_0001
		OUTCOME = $OUTCOME$
		RECIPIENTS = recipients
		TRAVELERS = travelers
	}
}

scripted_effect travl_travel_danger_0001_a_success_effect = {
	scope:prowess_character = {
		set_variable = { name = travl_event_effect value = flag:add_prestige }
		set_variable = { name = travl_event_value value = miniscule_prestige_value }
	}
}

scripted_effect travl_travel_danger_0001_a_failure_effect = {
	scope:prowess_character = {
		random_list = {
			25 = {
				set_variable = { name = travl_event_effect value = flag:kill }
				set_variable = { name = travl_event_character value = scope:bandit }
			}
			25 = {
				set_variable = { name = travl_event_effect value = flag:maim }
			}
			50 = {
				set_variable = { name = travl_event_effect value = flag:wound }
			}
		}
	}
	every_in_list = {
		list = travelers
		limit = { NOT = { this = scope:prowess_character } }
		travl_travel_danger_0001_failure_effect = yes
	}
}

scripted_effect travl_travel_danger_0001_b_success_effect = {
	scope:diplomacy_character = {
		set_variable = { name = travl_event_effect value = flag:add_prestige }
		set_variable = { name = travl_event_value value = miniscule_prestige_value }
	}
}

scripted_effect travl_travel_danger_0001_b_failure_effect = {
	scope:diplomacy_character = {
		random_list = {
			25 = {
				set_variable = { name = travl_event_effect value = flag:wound }
			}
			25 = {
				set_variable = { name = travl_event_effect value = flag:remove_prestige }
				set_variable = { name = travl_event_value value = medium_prestige_value }
			}
			50 = {
				set_variable = { name = travl_event_effect value = flag:remove_prestige }
				set_variable = { name = travl_event_value value = minor_prestige_value }
			}
		}
	}
	every_in_list = {
		list = travelers
		limit = { NOT = { this = scope:diplomacy_character } }
		travl_travel_danger_0001_failure_effect = yes
	}
}

scripted_effect travl_travel_danger_0001_c_effect = {
	scope:gold_character = {
		set_variable = { name = travl_event_effect value = flag:remove_gold }
		set_variable = { name = travl_event_value value = minor_gold_value }
	}
}

scripted_effect travl_travel_danger_0001_d_effect = {
	every_in_list = {
		list = travelers
		travl_travel_danger_0001_failure_effect = yes
	}
}

scripted_effect travl_travel_danger_0001_failure_effect = {
	random_list = {
		10 = {
			set_variable = { name = travl_event_effect value = flag:kill }
			set_variable = { name = travl_event_character value = scope:bandit }
		}
		10 = {
			set_variable = { name = travl_event_effect value = flag:maim }
		}
		20 = {
			set_variable = { name = travl_event_effect value = flag:wound }
		}
		10 = {
			set_variable = { name = travl_event_effect value = flag:remove_prestige }
			set_variable = { name = travl_event_value value = medium_prestige_value }
		}
		20 = {
			set_variable = { name = travl_event_effect value = flag:remove_prestige }
			set_variable = { name = travl_event_value value = minor_prestige_value }
		}
		10 = {
			set_variable = { name = travl_event_effect value = flag:remove_gold }
			set_variable = { name = travl_event_value value = minor_gold_value }
		}
		20 = {
			set_variable = { name = travl_event_effect value = flag:remove_gold }
			set_variable = { name = travl_event_value value = tiny_gold_value }
		}
	}
}

# Danger: Bandits
travl_travel_danger.0001 = {
	type = character_event
	title = travl_travel_danger.0001.t
	desc = travl_travel_danger.0001.desc
	#hidden = yes

	theme = travel_danger
	left_portrait = {
		character = scope:bandit
		animation = aggressive_axe
	}

	trigger = {
		has_variable = travl_travel_leader
		var:travl_travel_leader = root

		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes
		is_landed = no

		location = {
			OR = {
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = mountains
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					type = county_control
				}
				is_riverside_province = yes
			}
		}

		NOR = {
			has_character_flag = had_travel_danger_event_1002_bandit_event_recently
			has_character_flag = had_travel_event_1003_bandit_event_recently
			has_character_flag = had_travel_event_3070_bandit_event_recently
			has_character_flag = travl_had_travel_danger_0001_recently
		}
	}

	immediate = {
		#travl_debug_log_effect = { MSG = travl_debug_msg_travel_danger_0001_t }

		var:travl_travel_sender = { save_temporary_scope_as = sender }
		var:travl_travel_receiver = { save_temporary_scope_as = receiver }
		var:travl_travel_leader = {
			save_temporary_scope_as = leader
			travl_get_companions_effect = { COMPANIONS = companions }
		}

		# Get all relevant travelers (leader and all unlanded companions)
		scope:leader = {
			add_to_list = travelers
		}
		every_in_list = {
			list = companions
			limit = { is_landed = no }
			add_to_list = travelers
		}

		# Get message recipients (sender and / or recieiver)
		travl_get_message_recipients_effect = {
			SENDER = scope:sender
			RECEIVER = scope:receiver
			RECIPIENTS = recipients
		}

		# Add the player as a recipient (debug-only)
		if = {
			limit = { debug_only = yes }
			random_player = { add_to_list = recipients }
		}

		# Find or create bandit character
		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				prowess >= low_skill_rating
				diplomacy >= low_skill_rating
			}
			weight = {
				base = 10
				modifier = {
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root.location.county.holder }
					add = 100
				}
			}
			save_scope_as = bandit
		}
		if = {
			limit = {
				NOT = { exists = scope:bandit }
			}
			create_character = {
				location = root.location
				template = bandit_character
				save_scope_as = bandit
			}
			scope:bandit = {
				move_to_pool = yes
			}
		}

		# Find relevant travelers
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				prowess >= low_skill_rating
			}
			order_by = prowess
			save_scope_as = prowess_character
		}
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				diplomacy >= low_skill_rating
			}
			order_by = diplomacy
			save_scope_as = diplomacy_character
		}
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				gold >= minor_gold_value
			}
			order_by = gold
			save_scope_as = gold_character
		}

		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}

		add_character_flag = {
			flag = travl_had_travel_danger_0001_recently
			years = 5
		}
	}

	# Fight them (prowess challenge)
	option = {
		name = travl_travel_danger.0001.a

		trigger = {
			exists = scope:prowess_character
		}

		scope:prowess_character = {
			duel = {
				skill = prowess
				target = scope:bandit
				50 = {
					desc = travl_travel_danger.0001.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = a_success }
					}
				}
				50 = {
					desc = travl_travel_danger.0001.a.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = a_failure }
					}
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:prowess_character
				ai_boldness = 1
			}
		}
	}

	# Persuade them to let us pass (diplomacy challenge)
	option = {
		name = travl_travel_danger.0001.b

		trigger = {
			exists = scope:diplomacy_character
		}

		scope:diplomacy_character = {
			duel = {
				skill = diplomacy
				target = scope:bandit
				50 = {
					desc = travl_travel_danger.0001.b.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = b_success }
					}
				}
				50 = {
					desc = travl_travel_danger.0001.b.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = b_failure }
					}
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:diplomacy_character
				ai_rationality = 1
			}
		}
	}

	# Pay them off
	option = {
		name = travl_travel_danger.0001.c

		trigger = {
			exists = scope:gold_character
		}

		travl_travel_danger_0001_outcome_effect = { OUTCOME = c }

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:gold_character
				ai_greed = -1
			}
		}
	}

	# We are at their mercy...
	option = {
		name = travl_travel_danger.0001.d

		travl_travel_danger_0001_outcome_effect = { OUTCOME = d }

		ai_chance = {
			base = 1
		}
	}
}